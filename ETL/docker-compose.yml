services:
  spark-master:
    image: bitnami/spark:latest
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_HOST=spark-master
      - SPARK_MASTER_PORT=7077
      - SPARK_LOCAL_IP=0.0.0.0
    networks:
      - spark-network
    ports:
      - "8081:8080"
      - "7077:7077"
    depends_on:
     - minio
     - mariadb
    extra_hosts:
      - "host.docker.internal:host-gateway"

  spark-worker-driver:
    image: bitnami/spark:latest
    container_name: spark-worker-driver
    user: root
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER=spark://spark-master:7077
      - SPARK_WORKER_CORES=2
      - SPARK_WORKER_MEMORY=4G
      - SPARK_LOCAL_IP=0.0.0.0
      - HOME=/tmp
    networks:
      - spark-network
    volumes:
      - .:/opt/spark/work-dir
      - ./.env:/opt/spark/.env
      - ./requirements.txt:/opt/spark/requirements.txt
      - ./jars/aws-java-sdk-1.12.785.jar:/opt/bitnami/spark/jars/aws-java-sdk-1.12.785.jar
      - ./jars/hadoop-aws-3.4.1.jar:/opt/bitnami/spark/jars/hadoop-aws-3.4.1.jar
      - ./jars/mariadb-java-client-3.3.3.jar:/opt/bitnami/spark/jars/mariadb-java-client-3.3.3.jar
    command: ["/bin/bash", "-c", "pip install -r /opt/spark/requirements.txt && spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077"]
    depends_on:
      - spark-master
    ports:
      - "4040:4040"

  spark-worker-2:
    image: bitnami/spark:latest
    container_name: spark-worker-2
    user: root
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER=spark://spark-master:7077
      - SPARK_WORKER_CORES=2
      - SPARK_WORKER_MEMORY=4G
      - SPARK_LOCAL_IP=0.0.0.0
      - HOME=/tmp
    networks:
      - spark-network
    depends_on:
      - spark-master
    volumes:
      - ./jars/aws-java-sdk-1.12.785.jar:/opt/bitnami/spark/jars/aws-java-sdk-1.12.785.jar
      - ./jars/hadoop-aws-3.4.1.jar:/opt/bitnami/spark/jars/hadoop-aws-3.4.1.jar
      - ./jars/mariadb-java-client-3.3.3.jar:/opt/bitnami/spark/jars/mariadb-java-client-3.3.3.jar
    command: ["/bin/bash", "-c", "spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077"]

  spark-worker-3:
    image: bitnami/spark:latest
    container_name: spark-worker-3
    user: root
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER=spark://spark-master:7077
      - SPARK_WORKER_CORES=2
      - SPARK_WORKER_MEMORY=4G
      - SPARK_LOCAL_IP=0.0.0.0
      - HOME=/tmp
    networks:
      - spark-network
    depends_on:
      - spark-master
    volumes:
      - ./jars/aws-java-sdk-1.12.785.jar:/opt/bitnami/spark/jars/aws-java-sdk-1.12.785.jar
      - ./jars/hadoop-aws-3.4.1.jar:/opt/bitnami/spark/jars/hadoop-aws-3.4.1.jar
      - ./jars/mariadb-java-client-3.3.3.jar:/opt/bitnami/spark/jars/mariadb-java-client-3.3.3.jar
    command: ["/bin/bash", "-c", "spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077"]

  minio:
    image: bitnami/minio:latest
    container_name: bitnami_minio
    environment:
      - MINIO_ROOT_USER=minio_root
      - MINIO_ROOT_PASSWORD=minio_root
      - MINIO_ACCESS_KEY=access_key
      - MINIO_SECRET_KEY=secret_key
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - spark-network

  mariadb:
    image: mariadb
    container_name: mariadb
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=ads_schema
    volumes:
      - mariadb_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - spark-network

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - "8080:8080"
    networks:
      - spark-network

networks:
  spark-network:
    driver: bridge

volumes:
  minio_data:
  mariadb_data: